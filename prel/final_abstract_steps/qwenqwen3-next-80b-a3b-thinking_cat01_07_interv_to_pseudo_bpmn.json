[
  {
    "Name": "Inductive Reasoning - IND",
    "Text": "Okay, let's tackle this. I need to create a BPMN-like textual process model based on the interview transcripts. First, I'll go through each interview and extract the key points. Starting with Mary, the Accounts Payable Clerk. She says when an invoice arrives (usually by email), she checks for a valid PO number. If no PO, sends back to supplier. If PO exists, logs into accounting system, then forwards to Purchasing to confirm receipt. Then matches invoice line items against PO. If matches, sends to department manager for approval. If discrepancies, emails Purchasing to clarify; if unresolved, escalates to supervisor. After manager approves, schedules payment. Dan, Purchasing Officer: When he gets the invoice from AP, he checks against PO. If issues, contacts supplier or asks AP to hold. If correct, confirms to AP. If PO missing, tells Mary to get info. He never approves without PO. After confirmation, AP moves it to manager. Carlos, Department Manager: Gets notified after PO match and Purchasing confirmation. Approves if all good. If suspicious, rejects or asks to investigate. After approval, goes back to AP for payment scheduling. Rita, AP Supervisor: Handles exceptions. If Mary can't resolve, escalates to her. She contacts suppliers, coordinates for missing info or non-PO invoices. Creates retrospective POs if needed. After resolving, back to normal flow. Karen, Supplier Relationship Manager: Involved when there's discrepancies. She contacts suppliers for missing PO, pricing issues, checks contracts. Helps resolve so invoices can move forward."
  },
  {
    "Name": "Pattern Recognition - IND",
    "Text": "Now, need to structure this into BPMN elements: activities, sequence flows, gateways, roles, artifacts, exceptions. First, start with the main flow. Initial step: Invoice received (by email). Mary checks for PO. So, the process starts with Receive Invoice activity. Then check if PO exists. That's a gateway: yes/no."
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "If no PO, send back to supplier. Then maybe a loop? But Mary says send it back to supplier requesting details, so after that, maybe the supplier sends a new invoice with PO, then it goes back to start? Or does the process wait for the new invoice? But the interviews don't specify what happens after sending back. So perhaps after sending back, the invoice is on hold until supplier responds. But the model needs to capture that. But maybe the process continues when the supplier sends a new invoice. So perhaps the Send Back activity leads to a loop back to the PO check? Or perhaps the invoice is stored until supplier responds. But for BPMN, maybe a Wait for Supplier Response activity, but the interviews don't specify that. Alternatively, after sending back, the process stops until supplier replies, but that's not a step. Hmm."
  },
  {
    "Name": "Abductive Reasoning - PE",
    "Text": "Main flow: 1. Receive Invoice (by email) 2. Check for valid PO number (gateway: PO exists?)   - If no PO: Send back to supplier (activity), then maybe wait for response? But the interviews don't specify, so perhaps after sending back, it's a separate path. But Mary says send it back to supplier requesting more details. So the next step after that would be to wait for the supplier's reply. But in the model, perhaps there's a Wait for Supplier Response activity. But maybe the interviews don't mention that, so perhaps the model should have that as a step. But maybe the Send Back is followed by a loop back to the PO check? Like after supplier responds, the invoice comes back, then check PO again. But the interviews don't specify. Hmm. Alternatively, when Mary sends back the invoice, she's sending a request for more details. So the supplier then sends a new invoice with the PO. So the process would have to receive the new invoice again. But that might be a separate instance. But maybe for the model, after sending back, it's a path that leads to Receive Invoice again? Not sure."
  },
  {
    "Name": "Backtracking - PE",
    "Text": "After receiving invoice, check PO. If PO exists: Log into system (Mary's action), then forward to Purchasing (Dan) to confirm receipt. Dan checks against PO: compare quantities, prices, etc. If correct, confirm to AP. If issues, contact supplier or ask AP to hold. Wait, Dan says: If something’s off—like if we were billed for extra units—we either contact the supplier directly or ask the Accounts Payable clerk to hold the invoice until the supplier sends a corrected version. So if discrepancies, Dan contacts supplier or asks AP to hold. So the process might have a branch here. Then, after Dan confirms, Mary matches invoice line items against PO. Wait, Mary says: After logging it, I forward it to the purchasing department to confirm that the goods or services were actually received. Once I get confirmation, I match the invoice line items against the PO in the system. Wait, Mary's steps: check PO, log into system, forward to Purchasing. Then after confirmation from Purchasing, match invoice against PO. So the matching is done by Mary after receiving confirmation from Purchasing. But Dan says his job is to check if the invoice details line up with what we ordered. I open up the PO and compare quantities, prices, and any delivery charges. So Dan's check includes comparing the invoice details to the PO. So perhaps the steps: Mary logs the invoice into the system, then sends to Purchasing for confirmation of receipt. Dan then checks the invoice against PO. If correct, he confirms; if not, issues. Then Mary, upon getting confirmation, matches the line items? Wait, but if Dan already checked that, why does Mary do it again? Maybe Dan checks for receipt, and Mary checks the line items. But that seems redundant. Alternatively, maybe Dan's check is about whether the goods were received, and Mary's matching is checking the invoice details against PO. But Mary says she forwards to Purchasing to confirm that goods were received. So maybe Dan's task is to verify that the goods were received, and then Mary does the line item matching against PO. But Dan says he compares quantities and prices. So perhaps the Purchasing department's role is to confirm that the goods were received (so they check the delivery receipt, etc.), and then the matching of invoice to PO is done by Mary. But Dan says he compares quantities and prices. So maybe the PO has the order details, and the invoice is compared to that. So perhaps the Purchasing department's check is whether the invoice matches the PO (quantities, prices), and also whether the goods were received. But Mary says she forwards to Purchasing to confirm receipt. So maybe Dan's role is to confirm that the goods were received (so he checks delivery), and Mary's matching is checking the invoice to PO for pricing and quantities. But Dan's statement says he compares quantities and prices, which would be matching to PO. This is a bit conflicting. Let's try to reconcile. Mary: forward it to the purchasing department to confirm that the goods or services were actually received. So their job is to confirm receipt. Then Mary does the matching. Dan: my job is to check if the invoice details line up with what we ordered. So he checks invoice against PO. So perhaps the confirmation from Purchasing includes both confirming receipt and matching to PO. But Mary says confirm that goods were received, which is part of it. So perhaps the Purchasing department (Dan) checks both the receipt and the PO details. So when Mary forwards to Purchasing, Dan checks if the invoice matches the PO (quantities, prices) and confirms that the goods were received. If yes, he confirms; if not, issues. Then Mary, after getting confirmation, matches the line items against PO. Wait, but if Dan already checked that, why does Mary do it again? Maybe the matching is part of the system, but Dan's check is manual. Hmm. Alternatively, perhaps confirm that goods were received is separate from matching to PO. For example, Purchasing confirms that the goods were received (so they check the delivery note), and then Mary matches the invoice to the PO for pricing and quantities. But Dan's statement says he compares quantities and prices, which is part of matching to PO. This is a bit tricky. Let's see if there's another way. Maybe the Purchasing department's confirmation is only for receipt, and Mary does the matching. But Dan's statement says he checks quantities and prices, which is matching. Hmm. Let's try to outline all steps as per each interview. Mary's steps: 1. Receive invoice (email) 2. Check PO exists? If no, send back to supplier. 3. If yes, log into system. 4. Forward to Purchasing to confirm receipt. 5. Once confirmation received, match invoice line items against PO. 6. If match, send to manager for approval. 7. If discrepancy, email Purchasing to clarify; if unresolved, escalate to supervisor. 8. After manager approval, schedule payment. Dan's steps: - When invoice hits his inbox from AP, he checks invoice against PO (quantities, prices, delivery charges). - If issues: contact supplier or ask AP to hold. - If correct: send confirmation to AP. - If PO missing: tell Mary to get info. So Dan's check is part of the confirmation step. So when Mary forwards to Purchasing, Dan checks the invoice against PO and confirms receipt. So the confirmation from Purchasing includes both. So after Mary logs the invoice and forwards to Purchasing, Dan does the check. If correct, confirms to AP. If not, he contacts supplier or asks AP to hold. Then Mary, upon getting confirmation, matches the line items. But if Dan already checked, why does Mary do it again? Maybe the matching is part of the system's process after Purchasing confirms. This is a point where there might be conflicting accounts. But for the model, perhaps the steps are: After Purchasing confirms receipt (and matches PO), Mary does the line item matching. But Dan's check is part of the confirmation. So perhaps the model should have both steps: Dan confirms receipt and matches PO, then Mary does the matching again. But that seems odd. Alternatively, perhaps matching line items is the same as Dan's check. But Mary says she does it after confirmation. So maybe after Dan confirms, Mary verifies in the system. But perhaps the model should have: After Mary logs the invoice and forwards to Purchasing, Dan checks the invoice against the PO (including quantities, prices), and confirms receipt. If correct, he confirms. Then Mary does the line item matching (though this might be redundant, but per Mary's statement)."
  },
  {
    "Name": "Validation - PE",
    "Text": "Rita says: if Mary can’t match the invoice or if Purchasing has an issue—like the invoice is missing information or has a discrepancy that can’t be resolved—she escalates it to me. So matching is done by Mary. So Mary's task is to match the invoice line items against the PO. So perhaps after Purchasing confirms receipt, Mary does the matching. But Dan's check is part of the confirmation. So maybe: Mary logs invoice, forwards to Purchasing to confirm receipt. Purchasing (Dan) checks if the goods were received (so they check delivery docs), and then confirms. Then Mary matches the invoice to the PO for pricing and quantities. But Dan says he compares quantities and prices. So perhaps Purchasing's confirmation includes checking the PO details. So when Dan confirms, he's checking both receipt and PO matching. Then Mary's matching step might be redundant, or perhaps it's a system check. Given the information, perhaps the model should have: After Purchasing confirms receipt (and matches PO), Mary does the line item matching. But Dan's check is part of the confirmation. So perhaps the confirmation from Purchasing is that the goods were received (so delivery confirmation), and then Mary matches the invoice to PO for financial accuracy. But Dan's statement says he checks quantities and prices. So perhaps Dan's check is about financial matching. So the Purchasing department checks the financial details against PO, and confirms. Then Mary does the matching in the system. But that would be the same thing. Maybe it's a system check. Alternatively, perhaps the matching is done by Mary after the confirmation. So: After Purchasing confirms receipt (and PO matching), Mary does the line item matching in the system. But that seems odd. Maybe Mary's match is the same as Dan's check. But the interviews need to be reconciled."
  },
  {
    "Name": "Deductive Reasoning - PE",
    "Text": "List all activities mentioned: From Mary: - Receive invoice (email) - Check PO exists - If no PO: send back to supplier - If yes: log into system - Forward to Purchasing to confirm receipt - Once confirmation received: match invoice line items against PO - If match: send to manager for approval - If discrepancy: email Purchasing to clarify; if unresolved, escalate to supervisor - After manager approval: schedule payment From Dan: - Check invoice against PO (quantities, prices, delivery charges) - If issues: contact supplier or ask AP to hold - If correct: send confirmation to AP - If PO missing: tell Mary to get info From Carlos: - Get notification after PO match and Purchasing confirmation - Approve if good; reject or ask to investigate if suspicious - After approval, back to AP for payment From Rita: - Handles exceptions when Mary can't resolve or Purchasing issues - Contact suppliers, coordinate, create retrospective PO for non-PO invoices - After resolving, back to normal flow From Karen: - Contact suppliers for missing PO, pricing discrepancies; check contracts - Help resolve issues so invoices move forward So, putting this together. Main flow: 1. Start: Receive Invoice (by email) 2. Check for valid PO number (gateway)   - No PO: Send to Supplier for Details (activity), then loop back to Receive Invoice? Or wait for response. But the interviews don't specify. So perhaps after sending back, there's a Wait for Supplier Response activity. Then when supplier responds, invoice comes back, and the process continues from Check PO exists.   But the interviews don't mention waiting. So perhaps the Send Back is an activity, and then the process waits. But for BPMN, it's a task followed by a wait. But maybe the model should have Send Back to Supplier as a task, then a Wait for Supplier Response task, then back to Check PO.   But the interviews don't mention waiting, so maybe the model should have Send Back to Supplier and then the process continues when the supplier responds. But how? Maybe the next step is to receive the invoice again. So the process would loop back to the start.   Alternatively, perhaps the Send Back is part of the exception handling, and when supplier responds, the invoice is processed again.   For the model, perhaps the Send Back leads to a Supplier Response step, but the interviews don't mention that. So maybe the model should have Send Back to Supplier as a task, and then the process continues when the supplier sends a new invoice, which would be received again. So the model would have a loop from Send Back back to Receive Invoice.   But that might not be accurate. Alternatively, perhaps the invoice is on hold until supplier responds, but the process doesn't have a step for that. So in the model, after Send Back to Supplier, the next step is when the supplier responds, the invoice is received again. So the loop back to Receive Invoice.   But the interviews don't specify, so perhaps the model should have that. 3. If PO exists: Log Invoice into System. 4. Forward to Purchasing Department (Dan) for confirmation. 5. Purchasing checks invoice against PO (quantities, prices, etc.) and confirms receipt.   - If issues (e.g., discrepancies, missing PO info), then:      - Contact Supplier (Karen may be involved here)      - Or ask AP to hold      - If PO missing, Dan tells Mary to get info.   - If correct, send confirmation to AP. 6. Mary matches invoice line items against PO.   - If match: send to Department Manager for approval.   - If discrepancy: email Purchasing to clarify; if unresolved, escalate to Rita (supervisor). 7. Department Manager (Carlos) receives notification, reviews invoice.   - If all good: approve.   - If suspicious: reject or ask to investigate. 8. After approval: Schedule Payment. 9. For exceptions (e.g., missing PO, discrepancies):   - Rita (supervisor) handles: contacts suppliers, coordinates, creates retrospective PO for non-PO invoices.   - Karen (Supplier Relationship Manager) helps resolve issues: contacts suppliers for missing PO, pricing discrepancies. Now, gateways: - Check PO exists: yes/no. - After Purchasing check: correct vs issues. - After Mary's matching: match vs discrepancy. - After Manager approval: approved vs rejected. Also, roles: - Accounts Payable Clerk (Mary) - Purchasing Officer (Dan) - Department Manager (Carlos) - AP Supervisor (Rita) - Supplier Relationship Manager (Karen) Artifacts: Invoices, PO, system logs. Exceptions: - Missing PO: send back to supplier. - Discrepancies: escalate to Rita. - Non-PO invoices: handled by Rita creating retrospective PO."
  },
  {
    "Name": "Heuristic Reasoning - PE",
    "Text": "BPMN elements: - Activities: tasks with names - Gateways: decision points (exclusive, parallel) - Sequence flows: arrows between elements - Roles: who does what - Artifacts: data objects - Exceptions: alternate paths So for the textual representation, maybe describe each element in order. Start with Start event. Then activities and gateways. For example: 1. Start Event: Invoice Received via Email 2. Task: Check for Valid PO Number (performed by Mary)   - Gateway: PO Exists?      - No: Task Send Back to Supplier (Mary), then loop back to Check for Valid PO Number or Receive Invoice      - Yes: Task Log Invoice into Accounting System (Mary) 3. Task: Forward to Purchasing Department for Confirmation (Mary) 4. Task: Verify Invoice Against PO and Confirm Receipt (Dan)   - Gateway: Correct?      - Yes: Task Match Invoice Line Items Against PO (Mary)      - No: Task Handle Discrepancy (Dan or Mary)         - If PO missing: Task Request PO from Supplier (Mary), then loop back to Check PO.         - If other discrepancies: Task Contact Supplier via Karen or Ask AP to Hold, then possibly escalate to Rita. Wait, but Dan says if issues, he contacts supplier or asks AP to hold. So: After Verify Invoice Against PO and Confirm Receipt, if issues: - If PO missing: Dan tells Mary to get info. So Mary handles that. - If other discrepancies (e.g., pricing), Dan contacts supplier or asks AP to hold. But Karen is involved in resolving supplier issues. So perhaps: - If discrepancies:    - If missing PO: Task Request PO from Supplier (Mary)    - Else: Task Contact Supplier via Karen or Ask AP to Hold Then, after resolving, loop back to the verification step. But the interviews don't specify the exact flow after handling discrepancies. So Rita's role is to handle escalations. So for the model: After Verify Invoice Against PO and Confirm Receipt, if issues:    - If PO missing: Task Request PO from Supplier (Mary), then loop back to Check for Valid PO Number (since PO is now provided)    - Else: Task Handle Discrepancy which may involve Karen or Rita. But the interviews don't specify the exact type of issue. Dan says if something’s off—like if we were billed for extra units—we either contact the supplier directly or ask the Accounts Payable clerk to hold the invoice until the supplier sends a corrected version. So Dan contacts supplier or asks AP to hold. So perhaps: - If issues: Task Resolve Discrepancy    - Which may involve Karen contacting supplier, or Mary holding. Then after resolution, loop back to verification. But Rita is involved when it's unresolved. So perhaps: - After Verify Invoice Against PO and Confirm Receipt, if issues:    - Task Handle Discrepancy (Dan or Mary)       - If resolved: loop back to verification       - Else: Escalate to Rita But Rita's role is to handle when Mary can't resolve. So Mary escalates to Rita if she can't resolve. So: - Mary's match invoice line items step: if discrepancy, she emails Purchasing to clarify. If unresolved, escalates to Rita. So perhaps: After Match Invoice Line Items Against PO (Mary), if discrepancy:    - Task Email Purchasing for Clarification (Mary)       - If resolved: proceed to approval       - Else: Task Escalate to AP Supervisor (Mary), then Rita handles. Rita's tasks: Contact Supplier, Coordinate between departments, Create Retrospective PO, then loop back to normal flow. Also, non-PO invoices: Rita handles creating retrospective PO. So, let's structure the model step by step. Starting with: Start Event: Invoice Received Activity: Check for Valid PO Number (Mary) Gateway: PO Exists?    - No: Activity Send Back to Supplier (Mary), then loop back to Check for Valid PO Number    - Yes: Activity Log Invoice into System (Mary) Activity: Forward to Purchasing Department (Mary) Activity: Verify Invoice Against PO and Confirm Receipt (Dan) Gateway: Correct?    - Yes: Activity Match Invoice Line Items Against PO (Mary)    - No: Activity Handle Discrepancy (Dan or Mary)       - Gateway: Type of Issue?          - PO Missing: Activity Request PO from Supplier (Mary)  Loop back to Check for Valid PO Number          - Pricing/Quantity Discrepancy: Activity Contact Supplier via Karen (Karen), then loop back to Verify Invoice Against PO and Confirm Receipt          - Other Issues: Activity Escalate to Rita (Mary), then Rita's handling Activity: Match Invoice Line Items Against PO (Mary) Gateway: Match?    - Yes: Activity Send to Department Manager for Approval (Mary)    - No: Activity Email Purchasing for Clarification (Mary)       - If resolved: proceed to Approval       - Else: Activity Escalate to AP Supervisor (Mary), then Rita handles Activity: Department Manager Approval (Carlos) Gateway: Approved?    - Yes: Activity Schedule Payment (Mary)    - No: Activity Reject and Investigate (Carlos), then loop back to earlier steps Rita's tasks: When escalated, Rita: - Activity Contact Supplier (Rita) - Activity Create Retrospective PO (if no PO) - Activity Coordinate with Departments Then loop back to Verify Invoice Against PO and Confirm Receipt or Match Invoice Line Items But need to see where Rita fits in. Also, Karen's role: when there's a discrepancy, she helps resolve by contacting supplier. Now, the Schedule Payment leads to End Event. But also, Rita's involvement after she handles the exception, the invoice goes back into the normal flow. So the model should have Rita's tasks leading back to the appropriate step. For example, after Rita resolves the issue, the invoice proceeds to the next step. Now, to structure this in a clear textual BPMN-like format. Let's outline the process steps with roles and gateways. First, define the main flow. Start Event: Invoice Received via Email Activity: Check PO Existence (Mary) - Gateway: PO Exists?    - No: Activity Send to Supplier for PO Details (Mary)  Loop back to Check PO Existence    - Yes: Activity Log Invoice in Accounting System (Mary) Activity: Forward to Purchasing (Mary) Activity: Verify PO Match and Receipt (Dan) - Gateway: Correct?    - Yes: Activity Match Line Items to PO (Mary)    - No: Activity Handle Discrepancy (Dan/Mary)       - Gateway: Discrepancy Type?          - PO Missing: Activity Request PO from Supplier (Mary)  Loop back to Check PO Existence          - Pricing/Quantity Issue: Activity Contact Supplier via Karen (Karen)  Loop back to Verify PO Match and Receipt          - Other Issues: Activity Escalate to Rita (Mary)  Rita's handling Activity: Match Line Items to PO (Mary) - Gateway: Match?    - Yes: Activity Send for Manager Approval (Mary)    - No: Activity Clarify with Purchasing (Mary)       - Gateway: Resolved?          - Yes: Proceed to Send for Manager Approval          - No: Activity Escalate to Rita (Mary) Rita's Handling: Activity: Resolve Exception (Rita) - Which may include:    - Contact Supplier    - Create Retrospective PO (if applicable)    - Coordinate with Departments - Sequence Flow: Back to Verify PO Match and Receipt Department Manager Approval: Activity: Manager Approval Review (Carlos) - Gateway: Approved?    - Yes: Activity Schedule Payment (Mary)    - No: Activity Reject and Investigate (Carlos)  Loop back to earlier steps (e.g., to Verify PO Match or Match Line Items) End Event: Payment Scheduled Artifacts: Invoices, PO, System Logs. Exceptions: - Non-PO invoices handled by Rita creating retrospective PO. - Supplier issues handled by Karen. Now, for the textual representation, it's important to structure it clearly. Also, note that Rita's role is to handle escalations, so when Mary escalates to her, she resolves and then the process continues. So the final model should be: - Start with Invoice Received - Check PO existence - Log into system - Forward to Purchasing - Verify PO match and receipt - If correct, match line items - Then manager approval - Schedule payment - Exceptions handled via escalations and supplier involvement. Now, writing the textual description. BPMN Textual Model: Process Name: Invoice Approval Process Start Event: Invoice Received via Email Sequence Flow: 1. Activity: Check PO Existence (Role: Accounts Payable Clerk)    - Gateway: PO Exists?       - No  Activity: Send Back to Supplier for PO Details (Role: Accounts Payable Clerk)          - Sequence Flow: Back to Check PO Existence       - Yes  Activity: Log Invoice in Accounting System (Role: Accounts Payable Clerk) 2. Activity: Forward to Purchasing Department (Role: Accounts Payable Clerk) 3. Activity: Verify Invoice Against PO and Confirm Receipt (Role: Purchasing Officer)    - Gateway: Correct?       - Yes  Activity: Match Invoice Line Items to PO (Role: Accounts Payable Clerk)       - No  Gateway: Discrepancy Type?          - PO Missing  Activity: Request PO from Supplier (Role: Accounts Payable Clerk)             - Sequence Flow: Back to Check PO Existence          - Pricing/Quantity Discrepancy  Activity: Contact Supplier via Supplier Relationship Manager (Role: Supplier Relationship Manager)             - Sequence Flow: Back to Verify Invoice Against PO and Confirm Receipt          - Other Issues  Activity: Escalate to AP Supervisor (Role: Accounts Payable Clerk) 4. Activity: Match Invoice Line Items to PO (Role: Accounts Payable Clerk)    - Gateway: Match?       - Yes  Activity: Send for Department Manager Approval (Role: Accounts Payable Clerk)       - No  Gateway: Resolved?          - Yes  Activity: Send for Department Manager Approval (Role: Accounts Payable Clerk)          - No  Activity: Escalate to AP Supervisor (Role: Accounts Payable Clerk) 5. Activity: Resolve Exception (Role: AP Supervisor)    - Tasks:       - Contact Supplier       - Create Retrospective PO (if applicable)       - Coordinate with Departments    - Sequence Flow: Back to Verify Invoice Against PO and Confirm Receipt 6. Activity: Department Manager Approval Review (Role: Department Manager)    - Gateway: Approved?       - Yes  Activity: Schedule Payment (Role: Accounts Payable Clerk)       - No  Activity: Reject and Investigate (Role: Department Manager)          - Sequence Flow: Back to Verify Invoice Against PO and Confirm Receipt or Match Invoice Line Items to PO (depending on issue) End Event: Payment Scheduled Artifacts: - Invoice Document - Purchase Order (PO) - System Logs (Accounting System) Note: In cases where the invoice lacks a PO, the process loops back to request PO from supplier. If discrepancies cannot be resolved at Purchasing level, AP Supervisor (Rita) handles escalation. Supplier Relationship Manager (Karen) is involved in resolving supplier-related discrepancies. This captures the main flow, gateways, roles, and exceptions. Check for conflicts: For example, Mary says after matching, if discrepancy, email Purchasing. If unresolved, escalate to supervisor. So the Match Line Items step's No path leads to Clarify with Purchasing then if unresolved, escalate. In the model above, after Match Line Items to PO (Mary), if no match: - Activity: Email Purchasing for Clarification (Mary)    - Then, if resolved  proceed to approval    - Else  escalate to Rita. So the model should have that. Also, when Rita resolves, the process goes back to Verify PO Match and Confirm Receipt or to the matching step. But probably back to Verify PO Match since the issue might be at that stage. But Rita's handling may resolve the issue so that the invoice can proceed to the next step. In the model, after Resolve Exception, the flow goes back to Verify Invoice Against PO and Confirm Receipt or to Match Line Items, depending on what was resolved. But to keep it simple, perhaps back to Verify PO Match and Confirm Receipt. Also, when Dan handles discrepancies, he may contact supplier directly (Karen's role), so the Contact Supplier via Karen activity is part of resolving."
  },
  {
    "Name": "Conclusion - C"
  }
]