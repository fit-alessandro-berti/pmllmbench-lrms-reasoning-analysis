[
  {
    "Name": "Pattern Recognition - PE",
    "Text": "We are given a DECLARE model for a loan application process. We are to add constraints that mitigate bias based on sensitive attributes (e.g., ApplicantAge, ApplicantGender, ApplicantRace)."
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "The sensitive attributes might be represented by activities such as:\n- `CheckApplicantRace`\n- `CheckApplicantGender`\n- `CheckApplicantAge`\n\nAnd decision activities:\n- `Approve`\n- `Reject`\n- `RequestAdditionalInfo`"
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "We want to ensure that decisions are not made in a biased manner. We can introduce constraints such as:\n\n1. **Coexistence constraints**: If a decision is made for an applicant with a sensitive attribute, then a `ManualReview` must occur. However, note that in DECLARE, coexistence is bidirectional: if A occurs then B must occur and vice versa. But we don't necessarily want the vice versa. Instead, we might use a `responded_existence` or `response` constraint.\n\n   Actually, for fairness, we might require that whenever a sensitive attribute is checked and then a decision is made, there must be a `ManualReview` or `BiasMitigationCheck` in between."
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "Given the constraints available, we can do:\n\n   - Add a `response` constraint: after a sensitive attribute check, a `BiasMitigationCheck` must occur. But note: this doesn't require it to be before the decision.\n\n   - Add a `precedence` constraint: a decision must be preceded by a `BiasMitigationCheck`? But that would require every decision to be preceded by a `BiasMitigationCheck`, which might be too strong because not every decision involves a sensitive attribute? However, if we are checking sensitive attributes for every applicant, then we might require a `BiasMitigationCheck` for every decision? But that might be acceptable."
  },
  {
    "Name": "Deductive Reasoning - PE",
    "Text": "So the `response` constraint from S to `BiasMitigationCheck` ensures that if S occurs, then `BiasMitigationCheck` occurs after S.\n\n   And the `precedence` constraint from `BiasMitigationCheck` to D ensures that if D occurs, then `BiasMitigationCheck` occurs before D.\n\n   Therefore, if S occurs and then D occurs, then we have: S -> ... -> `BiasMitigationCheck` -> ... -> D."
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "Let's define:\n      sensitive_activities = ['CheckApplicantRace', 'CheckApplicantGender', 'CheckApplicantAge']\n      decision_activities = ['Approve', 'Reject', 'RequestAdditionalInfo', 'FinalDecision']"
  },
  {
    "Name": "Validation - IND",
    "Text": "But note: the example model does not have 'Approve' and 'Reject'? It has 'FinalDecision'. We assume that 'FinalDecision' is the activity that covers the decision? But we break it down? Or we treat it as a decision? We'll treat it as a decision."
  },
  {
    "Name": "Heuristic Reasoning - PE",
    "Text": "Let's look at the example model: it has \"FinalDecision\". We don't know what that is? It might be a placeholder? We'll treat it as a decision? And we also have \"RequestAdditionalInfo\" as a decision? So we'll use:\n\n        decision_activities = ['RequestAdditionalInfo', 'FinalDecision']"
  },
  {
    "Name": "Deductive Reasoning - PE",
    "Text": "Therefore, we update:\n\n        declare_model['precedence']['BiasMitigationCheck'] = {\n            'RequestAdditionalInfo': {'support': 1.0, 'confidence': 1.0},\n            'FinalDecision': {'support': 1.0, 'confidence': 1.0}\n        }"
  },
  {
    "Name": "Pattern Recognition - PE",
    "Text": "Final plan:\n\n      sensitive_activities = ['CheckApplicantRace', 'CheckApplicantGender', 'CheckApplicantAge']\n      decision_activities = ['RequestAdditionalInfo', 'FinalDecision']\n\n      For each sa in sensitive_activities:\n          Add to response: sa -> BiasMitigationCheck\n\n      For each d in decision_activities:\n          Add to precedence: BiasMitigationCheck -> d   (meaning: if d occurs then BiasMitigationCheck must have occurred before)"
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "Rationale:\n\n   We added:\n      - Response constraints from each sensitive attribute activity to the `BiasMitigationCheck` activity. This ensures that if a sensitive attribute (like race, gender, or age) is checked, then a bias mitigation check must eventually follow.\n      - Precedence constraints from the `BiasMitigationCheck` activity to each decision activity. This ensures that any decision (including requesting additional information or making a final decision) must be preceded by a bias mitigation check.\n\n   Together, these constraints ensure that whenever a sensitive attribute is checked, a bias mitigation check occurs, and that no decision is made without having first performed a bias mitigation check. This prevents decisions from being made immediately after learning sensitive attributes without a fairness check, thereby reducing the risk of biased outcomes."
  },
  {
    "Name": "Conclusion - C"
  }
]