[
  {
    "Name": "Abductive Reasoning - PE",
    "Text": "We are given a DECLARE model for a loan application process. We are to add constraints that mitigate bias based on sensitive attributes (e.g., ApplicantAge, ApplicantGender, ApplicantRace). The sensitive attributes might be represented by activities such as: CheckApplicantRace CheckApplicantGender CheckApplicantAge And decision activities: Approve Reject RequestAdditionalInfo We want to ensure that decisions are not made in a biased manner."
  },
  {
    "Name": "Hypothesis Generation - PE",
    "Text": "We can introduce constraints such as: 1. Coexistence constraints: If a decision is made for an applicant with a sensitive attribute, then a ManualReview must occur. However, note that in DECLARE, coexistence is bidirectional: if A occurs then B must occur and vice versa. But we don't necessarily want the vice versa. Instead, we might use a responded_existence or response constraint. Actually, for fairness, we might require that whenever a sensitive attribute is checked and then a decision is made, there must be a ManualReview or BiasMitigationCheck in between. 2. Response constraints: We can require that after a sensitive attribute check, a BiasMitigationCheck must occur before any decision."
  },
  {
    "Name": "Deductive Reasoning - PE",
    "Text": "We can use a response constraint: if a sensitive attribute is checked, then eventually a BiasMitigationCheck must occur. And the precedence constraint from BiasMitigationCheck to D ensures that if D occurs, then BiasMitigationCheck occurs before D. Therefore, if S occurs and then D occurs, then we have: S -> ... -> BiasMitigationCheck -> ... -> D. This ensures that between S and D there is a BiasMitigationCheck."
  },
  {
    "Name": "Validation - PE",
    "Text": "Together, these constraints ensure that whenever a sensitive attribute is checked, a bias mitigation check occurs, and that no decision is made without having first performed a bias mitigation check. This prevents decisions from being made immediately after learning sensitive attributes without a fairness check, thereby reducing the risk of biased outcomes."
  },
  {
    "Name": "Backtracking - IND",
    "Text": "We added an existence constraint for BiasMitigationCheck to ensure it occurs in every trace. But note: the precedence constraint from BiasMitigationCheck to FinalDecision will require that if FinalDecision occurs then BiasMitigationCheck must occur. So we dont need the existence constraint. We remove it."
  },
  {
    "Name": "Ethical or Moral Reasoning - PE",
    "Text": "Note: We assume that the sensitive attributes are checked for every applicant. Then every decision will be preceded by a bias mitigation check. And the bias mitigation check will occur after the sensitive attribute. So the sensitive attribute is known and then a bias mitigation is done. And then the decision. This breaks the direct link between sensitive attributes and decisions."
  },
  {
    "Name": "Heuristic Reasoning - PE",
    "Text": "We have two options: Option 1: Assume that the decision activities are only the ones in the example. Then decision_activities = RequestAdditionalInfo FinalDecision. Option 2: We assume that the process includes Approve and Reject. But the example model doesnt. Lets stick to the activities we know. And the example model doesnt have Approve and Reject. So we use: decision_activities = RequestAdditionalInfo FinalDecision"
  },
  {
    "Name": "Conclusion - C"
  }
]